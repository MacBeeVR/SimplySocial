trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - azure-pipelines.yml

pool:
  vmImage: 'ubuntu-latest'

variables:
  SQLScriptName: DbMigrate.sql

stages:
- stage: Build
  displayName: 'Build App'

  variables:
    BuildConfiguration: Release
    SQLArtifactDir: $(Build.ArtifactStagingDirectory)/SQL
    BuildProject: '$(Build.SourcesDirectory)/src/Server/SimplySocial.Server.csproj'

  jobs: 
  - job: Build
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: $(BuildProject)
        arguments: --configuration $(BuildConfiguration)

  - job: Prepare_App
    dependsOn: Build
    displayName: 'Publish Build Artifact'
    steps:
      - task: DotNetCoreCLI@2
        displayName: Publish
        inputs:
          command: publish
          zipAfterPublish: true
          publishWebProjects: false
          projects: '$(BuildProject)'
          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

      - task: PublishPipelineArtifact@1
        displayName: 'Publish Build Artifact'
        condition: succeededOrFailed()
        inputs:
          artifactName: SimplySocialApp
          targetPath: '$(Build.ArtifactStagingDirectory)'

  - job: Prepare_SQL
    dependsOn: Build
    displayName: 'Publish SQL Artifact'
    steps:
      - script: |
          dotnet tool install -g dotnet-ef
          export PATH=$PATH:$HOME/.dotnet/tools
          . ~/.bashrc
          . ./scripts/generate_sql_script.sh
        displayName: 'Create DB Migration Script'
        env:
          SCRIPT_NAME: $(SQLScriptName)
          PROJECT_PATH: $(BuildProject)
          OUTPUT_DIR: $(SQLArtifactDir)
        
      - task: PublishPipelineArtifact@1
        displayName: 'Publish SQL Artifact'
        inputs:
          artifactName: SQLScript
          targetPath: '$(SQLArtifactDir)/$(SQLScriptName)'

- stage: Deploy
  displayName: Deploy

  jobs:
    - job: DeployApp
      displayName: 'Deploy App'
      steps:
        - task: DownloadPipelineArtifact@2
          displayName: 'Download Artifact'
          inputs:
            artifactName: SimplySocialApp
            path: '$(Pipeline.Workspace)/SimplySocialApp'
        
        - task: AzureWebApp@1
          displayName: 'Deploy to App Service'
          inputs:
            appName: SimplySocial
            appType: webAppLinux
            azureSubscription: '$(AzureSubscription)'
            package: '$(Pipeline.Workspace)/SimplySocialApp/*.zip'
        

    - job: DeployDatabase
      displayName: 'Deploy Database'

      pool:
        vmImage: 'windows-latest'

      steps:
        - task: DownloadPipelineArtifact@2
          displayName: 'Download SQL Script'
          inputs:
            artifactName: SQLScript
            path: '$(Pipeline.Workspace)\SQL'
        
        - task: SqlDacpacDeploymentOnMachineGroup@0
          inputs:
            TaskType: 'sqlQuery'
            DatabaseName: '$(DBName)'
            ServerName: '$(SealsDevDBServer)'
            AuthScheme: 'sqlServerAuthentication'
            SqlUsername: '$(SealsDevDBServerAdmin)'
            SqlPassword: '$(SealsDevDBServerAdminPassword)'
            SqlFile: '$(Pipeline.Workspace)\SQL\$(SQLScriptName)'